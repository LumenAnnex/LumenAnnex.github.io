<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Lumen&#39;s Annex</title>
    <link>http://example.org/posts/</link>
    <description>Recent content in Posts on Lumen&#39;s Annex</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 24 Sep 2021 00:00:00 +0000</lastBuildDate><atom:link href="http://example.org/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>iOS | Method Swizzle</title>
      <link>http://example.org/posts/method-swizzle/</link>
      <pubDate>Fri, 24 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/posts/method-swizzle/</guid>
      <description>iOS中Method swizzling的使用
掘金
OC的runtime十分的强大，其中一个灵活的黑魔法就是Method Swizzle。
Swizzle的本质是：在运行时交换方法的实现（IMP）。灵活的使用swizzle，可以达到hook的效果，开发者可以hook住系统的方法或者生命周期，来做一些自定义的操作。
原理 Objective-C的消息机制：在 Objective-C 中调用一个方法， 实际上是在底层通过 objc_msgSend()发送一个消息。 而查找消息的唯一依据是selector的方法名。
[obj doSomething]; /// =&amp;gt; objc_msgSend(obj,@selector(doSomething))  每一个OC实例对象都保存有isa指针和实例变量，其中isa指针所属类，类维护一个运行时可接收的方法列表(MethodLists)； 方法列表(MethodLists)中保存selector &amp;amp; IMP的映射关系。在运行时，通过selecter找到匹配的IMP，从而找到的具体的实现函数。
开发中可以利用Objective-C的动态特性，在运行时替换selector对应的方法实现（IMP），达到给hook的目的。下图是利用 Method Swizzle 来替换selector对应IMP后的方法列表示意图。
Method%20Swizzle%2076aa8a50bd07495cae3a80f89563d2f0/16b06aaf3816730ctplv-t2oaga2asx-watermark.awebp
使用时注意   在使用swizzle的时候，可以在category中实现
  swizzling 应该只在 dispatch_once 中完成
由于 swizzling 改变了全局的状态，所以我们需要确保每个预防措施在运行时都是可用的。原子操作就是这样一个用于确保代码只会被执行一次的预防措施，就算是在不同的线程中也能确保代码只执行一次。Grand Central Dispatch 的 dispatch_once 满足了所需要的需求，并且应该被当做使用 swizzling 的初始化单例方法的标准。
  swizzling 应该只在 +load 中完成
在 Objective-C 的运行时中，每个类有两个方法都会自动调用。+load 是在一个类被初始装载时调用，+initialize 是在应用第一次调用该类的类方法或实例方法前调用的。两个方法都是可选的，并且只有在方法被实现的情况下才会被调用。
  要记得调用原来的方法
下面代码在正常情况下会出现循环：
- (void)xxx_viewWillAppear:(BOOL)animated { [self xxx_viewWillAppear:animated]; NSLog(@&amp;#34;viewWillAppear: %@&amp;#34;, NSStringFromClass([self class])); } 然而在交换了方法实现后就不会出现循环了。好的程序员应该对这里出现的方法的递归调用有所警觉，这里我们应该理清在 method swizzling 后方法的实现究竟变成了什么。在交换了方法的实现后，xxx_viewWillAppear:方法的实现已经被替换为了 UIViewController -viewWillAppear：的原生实现，所以这里并不是在递归调用。由于 xxx_viewWillAppear: 这个方法的实现已经被替换为了 viewWillAppear: 的实现，所以，当我们在这个方法中再调用 viewWillAppear: 时便会造成递归循环。</description>
    </item>
    
    <item>
      <title>iOS｜无障碍 &amp; 适老化</title>
      <link>http://example.org/posts/%E6%97%A0%E9%9A%9C%E7%A2%8D-%E9%80%82%E8%80%81%E5%8C%96/</link>
      <pubDate>Thu, 23 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/posts/%E6%97%A0%E9%9A%9C%E7%A2%8D-%E9%80%82%E8%80%81%E5%8C%96/</guid>
      <description>背景 
微信、支付宝等 43 个 APP 将进行适老化及无障碍改造，如何评价这一举动？具有什么样的社会意义?
👆此为背景，非常明确。GR需求永远是P00级别的需求。
改造实际上分为两个部分，1⃣️ 无障碍：指的是对于残障人士，特别是视力障碍人士的使用体验改造。具体的表现是，点击屏幕上的元素会发出声音提示；2⃣️ 适老化：指的是对于老年人的使用体验改造。目前的表现是：字体放大。简单粗暴。当然，真正的适老化改造应该从产品形态上做出调整，从设计上更方便老年人使用，而不是单纯的放大字体。
适老化 首先看一下适老化的部分。这部分相对简单，毕竟只需要把字体设置一下就可以。这里我们的诉求有两个：
 可以区分是不是适老化模式 各业务尽可能方便的接入，并且侵入性较小  直接来看方案，将所有的判断 &amp;amp; 放大算法 &amp;amp; 放大倍数等属性都抽出放在一个manager中。接下来对UIFont做一个category，里面包含设置字体的防范。方法最好是包装成内部处理是否适老化的，而不用外部传入。因为适老化应该是全局打开的一个开关。外部直接调用设置字体的方法，这个方法内部会判决是不是需要进行相应的放大。
无障碍 API 无障碍的部分相对麻烦。在iOS上，我们主要是使用系统提供的功能：「旁白」，以及相对应的API：UIAccessibility.
UIAccessibility实际上是NSObject的一个category，因此大部分系统的组件都是有相对应的属性。我们在下面列一下主要会用到的几个属性：
Untitled
掘金
iOS无障碍适配总结 | 轻舟半尺
详细的介绍可以看👆两篇文章。
手势 如果你是第一次打开iOS的「旁白」模式，一定会一脸懵逼。适应该模式下的操作需要一定的时间。我们大概描述一下基本的手势操作：
 轻点一下：轻点的元素将被设为焦点，并朗读。在屏幕上的任何手势操作（除了轻点一下别的元素），都是对该焦点元素，或者以该焦点元素为基准的操作 轻点两下：对焦点元素进行操作，并将朗读accessibilityHint。 单指左右滑动：当前焦点元素的上一个（左滑）/下一个（右滑）被设为焦点，并朗读。 单指拖拽：随手指滑动选择焦点。 三指轻扫：滑动。 没有Home键的Home out：很精妙的操作。首先你需要从下往上，慢慢滑动。当你感觉到有一次震动，松开。此时就是Home out。若你继续往上滑，感觉到两次震动，松开，就是打开多任务视图。  元素顺序 前面我们提到了单指左右滑动，会自动选择上一个/下一个元素。这里就势必有一个顺序问题。
如果当前的页面没有显式的指定元素的顺序的时候，元素的顺序是由上到下，由左到右，由高到低。因此真正的顺序和用户看到的并不一样。
当然我们可以手动的设置顺序，对父View设置accessibilityElements。这是一个数组，数组中依次设置好元素的顺序即可。
⚠️坑
这里有个坑，如果某个元素的高度为0，那么手势滑动走到这个元素的下一个就会卡住。无法再滑动。这种情况下就需要把它hidden掉，或者设置他的isAccessibilityElement为NO。
聚合朗读 有时我们的一个元素内有多个小的元素。在朗读时希望聚合在一起朗读。可以把父View的朗读标签直接设置成所有子元素的标签即可。</description>
    </item>
    
    <item>
      <title>iOS | Router</title>
      <link>http://example.org/posts/ios-router/</link>
      <pubDate>Fri, 13 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/posts/ios-router/</guid>
      <description>路由定义 简洁来说：路由是一个映射方法。我们将输入的信息以某种特定的方式进行转换，最后输出转换计算后的资源。
我们用另外一个原理一致的流程来描述这件事情。客户端需要从后端获取数据，我们发出了一条request，后端获取并解析这条request，在他们自己的逻辑中做一些操作（对数据库增删改查），最后输出一条结果，返回给客户端。
这其实就是一个典型的路由的过程。
对于后端来说，数据本身就是资源；对于客户端和前端来说，页面就是资源。我们最常见到的一种情况是页面间的路由跳转，实际上可以把它理解成，我们输入了一条想要跳转的路由指令，在客户端内部的映射计算之后，返回了一个结果，这个结果就是一个VC。
路由用来解决什么问题  页面间的耦合。以上面的情况来说，如果我们通过navigationController来惊醒页面间的跳转，就势必在一个VC中引入另一个VC。这就造成了耦合。那么再假设，iOS上支持3D touch，很可能用户会一下就跳进一个非常深的页面。这样的耦合就很恐怖。 组件间的耦合。随着业务的发展，组件之间的耦合也十分容易产生。好的组件应当尽量避免组件之间的耦合。  iOS APP之间的跳转 再进一步的研究之前，让我们首先看看iOS的APP之间是如何跳转的。这或许对我们有一些启示。
iOS APP之间的跳转有两种方式：URL Scheme和Universal Link。
URL Scheme是每个APP可以提供一个URL，直接在浏览器中输入URL就可以跳转打开对应的APP。这个scheme是可以在info.plist里面去配的。
如何设计好的路由 路由最主要实现的功能：
 注册路由 管理路由资源 匹配和派发资源  做的好的路由应当是没有感知的，悄无声息的就帮助系统完成了互相连接的工作。这样的设计自然比较困按钮，我们从几个例子来看看路由的设计方式
JLRoutes JLRoutes存储了一个全局的map，这个Map会以scheme为Key，JLRoutes为Value。所以在routeControllerMap里面每个scheme都是唯一的。
JLRoutes里面会保存一个数组，数组内部存储了路由规则里面包含的外部传入的闭包，并且会根据优先级进行排序路由。所以实际上，JLRoute内部维护了一个单调队列，所以再插入路由的时候直接顺序遍历就可以了。
这是存储和注册的过程。那么怎么进行查询和映射呢？JLRoutes会根据外部传入的URL和一些额外的参数构建一个request。这个请求会在当前的JLRoute的路由数组内依次的请求，数组内部的每一个规则会生成一个response。只有符合条件的response才可以match，最后找到匹配的response，从里面的字典参数取出来返回即可。
优点：
 能匹配多种不同规则的 URL，可以定义自定义的匹配规则、匹配逻辑 可以指定每个路由的优先级  缺点：
 当注册的 URL 比较多时，匹配效率比较低。  A Router A的router主要分为两个过程，注册和路由跳转。A的注册是懒注册的，在第一次使用该路由的时候，如果没在全局的映射表中找到对应的路由，那么就会开始注册。所有的路由信息都是写入到Data段内，直接从中读取。
参考文献 Halfrost-Field/iOS_Router.md at master · halfrost/Halfrost-Field</description>
    </item>
    
    <item>
      <title>iOS ｜ 玩转系统相册</title>
      <link>http://example.org/posts/%E7%8E%A9%E8%BD%AC%E7%B3%BB%E7%BB%9F%E7%9B%B8%E5%86%8C/</link>
      <pubDate>Sun, 25 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/posts/%E7%8E%A9%E8%BD%AC%E7%B3%BB%E7%BB%9F%E7%9B%B8%E5%86%8C/</guid>
      <description>背景 需求是要读取用户的相册，通过一定的策略进行展示，并且允许用户去多选照片进行后续的操作，具体的几项要求是
 优先读取截图文件夹，没有的话读取recent 展示顺序是时间由新到旧 用户对相册的改变实时更新到屏幕  在实际开发中遇到了以下这些问题
 无法获取正确的图片顺序 监听系统相册带来的问题 大量图片如何加载 异步加载图片导致错乱  关于相册的常用方法和类 关于图片的方法都集中在Photos这个系统库中，几个常用的方法和类如下
PHPhotoLibrary PHPhotoLibrary是获取图片的接口，类似Metal的MTLDevice。
//获取图片的接口 @available(iOS 8, *) open class PHPhotoLibrary : NSObject { @available(iOS 8, *) open class func shared() -&amp;gt; PHPhotoLibrary //返回当前的授权状态 @available(iOS 8, *) open class func authorizationStatus() -&amp;gt; PHAuthorizationStatus //申请权限 @available(iOS 8, *) open class func requestAuthorization(_ handler: @escaping (PHAuthorizationStatus) -&amp;gt; Void) //存储app内对照片的修改 // handlers are invoked on an arbitrary serial queue // Nesting change requests will throw an exception @available(iOS 8, *) open func performChanges(_ changeBlock: @escaping () -&amp;gt; Void, completionHandler: ((Bool, Error?</description>
    </item>
    
    <item>
      <title>Reading | 毛选-湖南农民运动考察报告</title>
      <link>http://example.org/posts/%E6%AF%9B%E9%80%89-%E6%B9%96%E5%8D%97%E5%86%9C%E6%B0%91%E8%BF%90%E5%8A%A8%E8%80%83%E5%AF%9F%E6%8A%A5%E5%91%8A-3624562e4e734281a95afc910ce06ebb/</link>
      <pubDate>Sun, 25 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/posts/%E6%AF%9B%E9%80%89-%E6%B9%96%E5%8D%97%E5%86%9C%E6%B0%91%E8%BF%90%E5%8A%A8%E8%80%83%E5%AF%9F%E6%8A%A5%E5%91%8A-3624562e4e734281a95afc910ce06ebb/</guid>
      <description>这一篇读了很多遍。毛主席果然是伟人，在这一篇报告中，对于如何处理一个复杂问题给出了十分详细且实用的方法。怎么做调研，怎么做分析，怎么归纳演绎。这也是为什么相较于西方哲学，我更喜欢毛选的原因，他不仅教你如何想，还教你如何做。
背景 阅读这篇报告，首先要考察他的创作背景。报告发表于1927年3月，这是一个巧妙地节点。在此之前的一年，也即是1926年，开始了国共合作的北伐运动。1926年2月，中共中央根据斯大林的指示，决议“党在现时政治上主要的职任，是从各方面准备广东政府的北伐；而北伐的政纲必须是以解决农民问题作主干”。同年5月-9月，北伐军相继进入湖南、长沙、武汉，并在各地开展农民运动。这是农民运动的开始。
当时两党负责农民运动的是谭平山和毛泽东。谭平山当时已是中共党员，时任中国国民党农民部长，毛泽东任国民党广州农民运动讲习所所长（值得一提的是，谭平山曾是五四运动火烧赵家楼中的一员）。就当时而言，农民运动在两党都是受到支持的活动，以毛泽东、谭平山等人为代表的一派中共党员开始主张深化农村土地革命、发展农民运动。但随着农民运动对农村社会的冲击，触动了地主阶级的利益。这其中就包括了部分的国民党右派，国共合作开始出现裂隙。同时，以陈独秀为首的中共党员，为了维护国共关系（一说是因为严格遵守共产国际的方针），也要求极力避免农民运动中带来的问题。
在党外和党内都存在质疑的情况下，毛泽东于1927年1月到2月在农民运动最繁盛的湖南省进行考察。
实际上，当我们站在后人的角度上看。当时党内存在的不和谐问题的确影响到了后面的发展。1927年4月蒋介石发动了四一二政变，自此开始了国共第一次战争。导火索可以说是国共两党日益加剧的利益冲突，但或许我们不可否认，以陈独秀为首的右倾机会主义存在的软弱性，使得国民党抓住了时机。
问题的调研 文中的具体内容深入浅出而富有逻辑，因此不再赘述。我们关注于整篇报告的结构和其中蕴含的方法。
报告首先总结了农民运动的严重性，这一部分虽然短小但是信息量大。里面的逻辑十分清晰：我何时何地，同谁通过什么方式，进行了调研——得出了什么样的结果——与我们预期的结果的差距——我们应该怎么做——我们为什么要这样做。
放到现在来说，这个叫反馈调节，当然很多二十一天学会什么东西的书里会起各种各样高级的名字。这个思路值得思考，我们如何去做调研，上面给出了详细的步骤。
调研问题的内容又如何，报告接下来给出了回答：客观的事实。这一点看似简单但却十分难得。当我们评价一个问题往往带有着主观的因素，事实会在不同的人眼里呈现出不同的样貌。但客观的事实才能引导出正确的结论。当我们看到报告里所描述的农民运动时，事实上，以现在人的视角来看，有些事情似乎是不合适的，如果放到网络上一定是要激起轩然大波。但客观公正的先把事情摆出来，才是正确分析的前提。
问题的分析 报告中紧接着是对当时对农民运动质疑声音的回答。我想或许调研的过程并非如此，如果将报告的后一部分提前可能更合理。也就是，先总结农民运动主要做了什么，再对这些质疑进行回答。
我们首先看十四件大事。一个复杂的社会问题，如何进行抽象，提炼出其中的元操作（我们在linux的设计哲学中也讨论过这个问题，由此看来，无论是社会问题还是技术问题似乎都有着同样的思路）。十四件大事，在我看来分为两类操作：推翻和建立。在概念上看是正确的，推翻原有陈旧的，建立新的。注意这里，无论是推翻还是建立，一定都是物质上和精神上的。比如为了推翻地主，农民从政治上、经济上打压了地址，推翻了地主武装，这是物质上；同时，推翻了原先的神权（菩萨）和男权，这是精神上。
价值的判断 回答质疑，就是一个价值判断的过程。要去回答一个问题好还是不好，首先要明确什么是好，什么是不好。这个标准有可能并不是普世的价值观。我们知道杀人不好，但是枪毙地主是不是好事？我们反对痞子行为，但农民运动是不是痞子行为？若按照普遍的价值判断，这个报告里的结论似乎不正确。因此，根据不同的形势，建立正确的价值观，是十分重要的事情。
现实生活中，事情不是非黑即白。当我们认同农民运动的积极性时，不能否认的是，他是否（从普遍的价值观看）有些过分？这里就有一句广为流传的话“革命不是请客吃饭“。它蕴含的哲理是抓住重点。当你要建立某种东西，哪怕是精神上的东西，也势必意味着要推翻一些现存的。这些被推翻的东西中，有好有坏。抓住重点，学会舍弃。
这其中带来的问题就是，如何决定什么该变什么不该。如果事事随着局势变化，那不成了浮萍，毫无根据。我认为应当将问题分为表里。对于里的部分，是不应当变化的，比如建立一个共产主义的社会、获得诺贝尔奖、成为更好的人等，这些是驱动一个客体的内在动力，就像汽车的能源一样，你不能将一个汽油车突然换成电动车。对于表的部分，要拥抱变化。这包括你的一部分价值观，方法论，和所有附带的物质部分。我们说一部分的价值观，这因为作为社会中的人，我们要存在一定的道德约束。对于这部分不应随着时代的改变而改变，因为他历经了时代而得到传承。对于另一部分的价值观，即对其他事物的价值判断，我相信应当是变化的。对一个人来说，教育就是价值观变化的过程，当然社会的毒打也是。
扯远一点来说，上述的问题十分重要。我们常说人生中有许多诱惑。但这些诱惑不都是坏的，很多时候都是未选择的路。坚定里，灵活表。这样做虽然不能不留遗憾，但能得到一部分的完美。也就是说，我们往往不能得到全局最优，但是得到局部最优也不失为一种选择。
摘录 一切革命同志须知：国民革命需要一个大的农村变动。辛亥革命没有这个变动，所以失败了。现在有了这个变动，乃是革命完成的重要因素。
革命不是请客吃饭，不是做文章，不是绘画绣花，不能那样雅致，那样从容不迫，文质彬彬，那样温良恭俭让。革命是暴动，是一个阶级推翻一个阶级的暴烈的行动。
信八字望走好运，信风水望坟山贯气。今年几个月光景，土豪劣绅贪官污吏一齐倒台了。难道这几个月以前土豪劣绅贪官污吏还大家走好运，大家坟山都贯气，这几个月忽然大家走坏运，坟山也一齐不贯气了吗？土豪劣绅形容你们农会的话是：‘巧得很啰，如今是委员世界呀，你看，屙尿都碰了委员。’的确不错，城里、乡里、工会、农会、国民党、共产党无一不有执行委员，确实是委员世界。但这也是八字坟山出的吗？巧得很！乡下穷光蛋八字忽然都好了！坟山也忽然都贯气了！神明吗？那是很可敬的。但是不要农民会，只要关圣帝君、观音大士，能够打倒土豪劣绅吗？那些帝君、大士们也可怜，敬了几百年，一个土豪劣绅不曾替你们打倒！现在你们想减租，我请问你们有什么法子，信神呀，还是信农民会？
中国历来只是地主有文化，农民没有文化。可是地主的文化是由农民造成的，因为造成地主文化的东西，不是别的，正是从农民身上掠取的血汗。中国有百分之九十未受文化教育的人民，这个里面，最大多数是农民。农村里地主势力一倒，农民的文化运动便开始了。试看农民一向痛恶学校，如今却在努力办夜学。“洋学堂”，农民是一向看不惯的。我从前做学生时，回乡看见农民反对“洋学堂”，也和一般“洋学生”、“洋教习”一鼻孔出气，站在洋学堂的利益上面，总觉得农民未免有些不对。民国十四年在乡下住了半年，这时我是一个共产党员，有了马克思主义的观点，方才明白我是错了，农民的道理是对的。乡村小学校的教材，完全说些城里的东西，不合农村的需要。小学教师对待农民的态度又非常之不好，不但不是农民的帮助者，反而变成了农民所讨厌的人。
湖南的右派领袖刘岳峙辈，与蒋、张诸公一个意见，都说：“这简直是赤化了！”我想，这一点子赤化若没有时，还成个什么国民革命！嘴里天天说“唤起民众”，民众起来了又害怕得要死，这和叶公好龙有什么两样！</description>
    </item>
    
    <item>
      <title>Fragment | 游戏们的透镜</title>
      <link>http://example.org/posts/%E6%B8%B8%E6%88%8F%E7%9A%84%E9%80%8F%E9%95%9C%E4%BB%AC-3590daed6406490fa9c345d12ae97c6d/</link>
      <pubDate>Tue, 25 May 2021 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/posts/%E6%B8%B8%E6%88%8F%E7%9A%84%E9%80%8F%E9%95%9C%E4%BB%AC-3590daed6406490fa9c345d12ae97c6d/</guid>
      <description>透镜这个说法来源于《游戏设计艺术》，他提供了多个看待游戏的角度，从这些角度判断自己的游戏是不是好游戏。这篇文章将会记录下来这些透镜，和自己的一些感受。
1号：情感  我想让玩家们感受什么情感？为什么？ 玩家所体验的感情是什么？为什么？ 我如何缩小人们实际体验与我设想的差距
 这号透镜是为了确认，我所想创造的情感是正确的，并且正确的传达到玩家。一个主要的问题是，要清晰的表达出是要传达的是怎样的情感，以及想要这样做原因。如果一顿饭不好吃，那么是哪里不好吃？太咸了、太凉了或是什么。一定要清晰，在明白他人的情感之前，一定要先明白自己的。
2号：本质体验  我想让玩家获得的是什么体验 这种体验的本质是什么 我如何让我的游戏抓住这种本质
 一件愉快的事情，他一定有组成愉快的几个关键步骤。这就是上一号透镜里提到的「为什么」。比方说游泳很快乐，那么具体那一天发生了什么？可能是旁边有好看的小姐姐，天气很热但是泡在水里很凉爽，在休息的时候吃到了想吃的雪糕。这些种种，我们或许称之为细节的东西，恰恰是能还原这种快乐的东西。接下来，在游戏中去复现这些东西。即使他可能与原来的情况并不一致，但这不重要。人们的记忆是关于体验的，而非事实。
3号：场景  我想制作的游戏最适合于那种场景 场景中是否有些元素可以影响到我的游戏 我的游戏中哪些元素可以与场景和谐共处，哪些不行，为什么
 这里是一个很有意思的想法，我们所说的场景，并非是平台。平台随着技术会很快的变化，但是场景是不变的。任天堂是一种「壁炉」式的场景，steam则是一种「工作台」式的场景。这些场景从很久之前就产生在人类生活中，我们从在壁炉边讲故事，到现在在电视机前舞力全开，本质上都是一样的：和熟悉的人进行轻松愉快的活动。
考虑场景可以帮你找到合适的游戏元素进行扩展。当我们考虑场景的时候，就去考虑生活中那些质朴的游玩方式，电子游戏只不过是众多游戏中的一个门类而已。
4号：惊喜  当玩家们玩我的游戏的时候，他们会感到惊喜吗 我的游戏中有惊喜吗？他在哪里？故事？规则？艺术？技术？ 我的规则能让玩家自己给自己带来惊喜吗 我的规则能让玩家互相之间带来惊喜吗
 看一看B站上各种各样的塞尔达视频就知道了。旷野之息发布已经三年，惊喜还是能不断的发现。惊喜是快乐的重要组成部分。甚至有的时候，开发者要显得「被玩家钻了空子」，但事实上，这一点恰好是进行设计的。比如Celeste的几个像素点的偏差。
5号：乐趣  我的游戏中哪几个部分很有趣？为什么？ 哪几个部分需要变得更有趣？
 当然了，这个问题我想所有的开发者都会问自己。
6号：好奇心  我的游戏给玩家提出了什么问题 我如何让他们注意这个问题 我能做什么让他们提出更多的问题
 好奇心害死猫，但或许能拯救一款游戏。当我们在玩游戏的时候，会想知道下一部份的游戏内容。下一段动画是什么？背后的组织到底是什么？我能否拯救别人？通常来说，我们总能提出一个问题，但是要让玩家注意到他们，这个问题的解答一定要有意义，如果这个问题背后会隐藏一个更加巨大的问题，玩家会自发的去寻找他。但是注意：巨大的冒险一定要有巨大的宝藏。
7号：内生价值  我的游戏中哪些元素对玩家很有价值 我如何让这些对玩家更有价值 游戏中的价值和玩家的动机有什么联系
 游戏中的价值是对游戏吸引力的重要评判。当游戏中的价值十分吸引玩家时，它会影响到现实生活。我们看到淘宝上很多在使用显示货币售卖游戏装备。
8号：解决的问题  我的游戏要求玩家解决那些问题 能否有一些隐藏的问题会出现 在我的游戏中，能否不断产生新的问题给玩家
 一种对游戏的定义是：游戏是以嬉戏的态度解决问题的一种活动</description>
    </item>
    
    <item>
      <title>Reading | 人生的智慧</title>
      <link>http://example.org/posts/2020-4-%E4%BA%BA%E7%94%9F%E7%9A%84%E6%99%BA%E6%85%A7-a0214195bd4f4bc49f4f3a348856bb90/</link>
      <pubDate>Thu, 15 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2020-4-%E4%BA%BA%E7%94%9F%E7%9A%84%E6%99%BA%E6%85%A7-a0214195bd4f4bc49f4f3a348856bb90/</guid>
      <description>4.6起读叔本华《人生的智慧》
一开始对这个书是抗拒的，这个翻译的书名真的是太鸡汤了。不过真的是想找一本哲学的书来看，最后还是挑了这一本入门。当然了，这些话写到网上很有可能要被骂的，什么“读哲学要从哲学史开始”，”读这个不如读《作为意志和表象的世界》“诸如此类云云。对于这些言论，我只想说**「说得好！」**，但是还是把这一本当做我的哲学入门书吧。
书里还是有一些有趣观点，叔本华继承了亚里士多德的想法，将人分为三个部分：与生俱来的部分、后天获得的部分，和他人眼中的部分。具体来说，就是天生下来的赋予的智慧、个性、理解力；和后天获得的钱财、情感；以及在社会中的地位、荣誉这三个部分。
书名「人生的智慧」可以说是找寻人生幸福的方法。人的一生有两个极端，痛苦和无聊，人要么处于其中一个极端，要么就是在前往另一个极端的路上。获得人生幸福的方式，就是在两者中找到平衡。越能从精神领域获得满足的人，就越容易获得幸福。
当然，叔本华在书中有着相对悲观的看法。他认为教育的作用十分有限，对于人的第一个部分，基本上没有办法通过任何后天的办法进行弥补。这当然是有点难过的，毕竟对于我来说，作为泯泯众生中的一员，确实也是想要进行成长的。
同样，在对待他人想法的态度上，叔本华也表现的十分的「知识分子」。「太过看重别人得看法，那就是抬举他们了。」一定程度上，或许是对的。但是我不会成为脱离人群之外的高洁之士，在社群中生活，看不起人群便是看不起自己。
总的来说，这本书在某些观点上还是给了我启发，但其他相当一部分观点，至少现在还不能理解。之前有句其他的话记得很清楚：东方的哲学教你如何做，西方的哲学教你如何想。当然有一些例外的，比如马克思就会给你两把刀。考虑之后还是会看方法论多一点著作，还是接着去读毛选吧。</description>
    </item>
    
    <item>
      <title>Fragment | 动物之森 新地平线</title>
      <link>http://example.org/posts/%E5%8A%A8%E7%89%A9%E4%B9%8B%E6%A3%AE%E6%96%B0%E5%9C%B0%E5%B9%B3%E7%BA%BF-cf609a5d48f3499c9fd74c4e7adaa926/</link>
      <pubDate>Mon, 05 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/posts/%E5%8A%A8%E7%89%A9%E4%B9%8B%E6%A3%AE%E6%96%B0%E5%9C%B0%E5%B9%B3%E7%BA%BF-cf609a5d48f3499c9fd74c4e7adaa926/</guid>
      <description>A game where you hang out and do stuff with a bunch of people in a single field.——Katusya Eguchi
 到写下这篇文章的时候，我已经玩了接近三周的时间，游戏时间是50小时左右。
游戏的目的是传达一种体验。我会尝试分析这一款游戏他要传达的体验，以及为了传达这种体验所使用的方法。
关于沟通这个话题 动物之森这个系列自2001年就开始。创始人每一次都在说，这个系列最初的创意在于「沟通」。
新地平线发售以来，在中国引发的社交潮流可见一斑。人与人之间的社交，这层体验很显然是游戏所传达的。但我并不是一个热爱社交，甚至会避免玩多人游戏的人，动森对于我也是有吸引力的。它向我传达的体验是「虚拟生物的社交」，钓到鱼会给你鼓掌，每天会打招呼，会毫不吝啬的夸奖你、夸完之后还会害羞。这个层面的社交是我所喜欢的。这样来看「沟通」至少是从这两个方面理解。
但「沟通」本身，并不能算是一种体验。它是一个行为。亚里士多德说人可以分为三个部分：自身内在的部分，后天获取的部分，和他人眼中的部分。这三个部分都可以给人带来幸福，动森瞄准的，就是第三个部分。当你在这个虚拟社区中，即使是钓到了一条鱼、做了一个小凳子，都会有人称赞。自从动物之森：新叶之后，玩家从一个普通的岛民变成了岛主，你所做的一切即是你为这个社区做的贡献，整个社区会因此感谢你，这种感谢满足了上述的人的第三个部分。
而同样的，这种虚拟社交里非常完美的人际关系，竟然一定程度的影响到真实世界。当你和朋友一起玩的时候，没有因为谁好谁坏而产生矛盾，都是互相称赞的虚假情感。
由此来看，我可以认为，动森所传达的核心体验，就是**”人在社群中的满足“**。或许一个人在现实中没什么朋友，没有值得骄傲的社会地位，但在游戏中全都有，而且这些虚拟的朋友还长得都很可爱。
本质体验 本质体验这个词来源于Jesse Schil的《游戏设计艺术》。它的意思是一个体验可以被拆成的几个更基本的体验。好比“一次愉快的打雪仗”是一次体验，那么它具体哪里让我愉快是本质体验，是“天气冷到学校放假”，或者是“我完美砸中了李二狗的狗头”。传达一种体验的方法，在于复现这些本质体验。
那么动森使用了哪些本质体验来传达呢？
富有人情味的动物 动物之森，首先是动物。动物之森：新地平线首发的动物高达383位，并且性格各异。我的岛上就住了健身达人茶茶丸，女团练习生小啾这些个性鲜明的角色。鲜明的个性、丰富的对话带来社交的真实感。同样，这些动物也有着自己的生活。他们也自己造东西，钓鱼，坐在地上看天，甚至想要搬家。这一切让整个社区看起来真实。你会有这些动物并不是只为你存在。
但巧妙的是，当经过一段时间，这些动物会主动找你，或是教你表情，或是称赞你为社区做的贡献然后给予奖励。总而言之，这个距离感处理的非常巧妙。不至于让你觉得活在楚门的世界中，也不至于觉得社区冷清没有人情味。
总结下来是：巧妙的处理动物的行为，保持接近于真实、却更温暖的社交环境。
迅速反馈的实践 毛主席说过，人类的生产活动是最基本的实践活动，人的认识，依赖于实践活动，了解到与自然的关系，而且经过生产活动，进一步了解到人与人之间的相互关系。我们可以理解为：通过生产活动了解到人和这个社会的关系。
延伸到本作，这个逻辑就是：通过一系列的生产活动——产生一系列对社区的贡献——提高人在社区中的声望——加强人与社区的关系。那么在动森里你可以做的事情有哪些呢？我们可以大致分类：
 能直接产生经济收益的：钓鱼、捉虫子、摘果实 能获取素材进而产生收益的：砍树、挖石头、种植、打弹弓  上述的行为基本维持在15s内，并且继承了任天堂一贯的易上手难精通的风格。一个新手很快就可以赚到一笔不小的金额，即使某项活动失败了，很快你就能找到另外一件事情去做。而最棒的是，每一件事都会给你正面的反馈，不管你钓到了什么鱼，捉到了什么虫子，都会有明显的提示语句（不是鱼露，是鲈鱼哦）。
迅速反馈的实践并带来正面的反馈，就好像不断跳动的心脏，每一刻都在提醒你，在这个社区中，你会获得积极的体验。
没有等级的限制和严厉的惩罚 动物之森中没有等级，这指的并非是传统RPG的那种提高属性数字的等级，而是获取游戏内容的等级。动森的大部分游戏“内容”都可以轻松的获得，即使是像我这样佛系的玩家，在开始游玩的一周之后也基本获得了游戏的大部分内容：博物馆、商店、裁缝店、一室一厅的家、可以装饰起小岛的设计图纸。
尽管游戏内容并非是一个好的说法，毕竟有数百位居民都没有见过。但依靠上述的物品，你想做的任何事情大部分都可以完成，需要的只是玩家自己的时间。完成前置任务也并不困难，你完全可以聚焦在你想做的事情上。
举个例子，如果这是一个传统的JRPG游戏。我想要打倒某一个boss，我需要做一系列事情：我需要不断战斗升级人物属性——获取到更强的装备——学习新的技能——打倒boss。如果你跳过了某个环节，那么最后的战斗将无比惨烈。但动森的前置任务链就没有这么复杂，比如我想打造一片花园：获取种子——把花种在想种的地方——布置花园。在这个过程中素材的获取并不困难，并且正如上一点提到的，它充满了积极的反馈。
同时，这个游戏内几乎没有什么惩罚机制。最差的情况就是被狼蛛咬了，但这只是送你回家，并没有实质性的惩罚。即使你错误的布置了某个地方，也可以之后将它重新布置。
这两点对于一个美好的社区来说非常重要，没有阶级，没有严格的惩罚剥削。这是什么社区？共产主义社区。
没有人能独自完成收集 因为地理、时间的限制，你无法独自收集完成所有的物品。而这个物品相当的多：鱼、昆虫、化石、家具、衣服。这个时候就必须和玩家进行社交。而当你完成了收集之后，博物馆里的景象会让你流连忘返。这些也加强了玩家和这个虚拟社区的联系。
后续 游戏中还有许多其他机制，包括时间同步、多样化的收集系统、有趣的动物语音等。但针对于本质体验，个人认为可以总结为以上几点。关于「沟通」这个话题，我们看到许多游戏也在讨论，著名的有小岛秀夫去年发布的死亡搁浅，那是一种完全不同的体验。
动森要传达的体验是积极而正面的，并且也更容易被人所理解。在设计本质体验时，很多小的细节被考量。钓鱼的方式、各项活动的时间，这些细节体现出了一个游戏的手感，进而影响整个游戏体验。很多时候，我们就是因为无法找到正确的抓手，才没有办法很好的呈现出来游戏想要传达的体验。</description>
    </item>
    
    <item>
      <title>Fragment | 从核心玩法开始设计游戏</title>
      <link>http://example.org/posts/%E4%BB%8E%E6%A0%B8%E5%BF%83%E7%8E%A9%E6%B3%95%E5%BC%80%E5%A7%8B%E8%AE%BE%E8%AE%A1%E6%B8%B8%E6%88%8F-6bea0c261e4241488159df50004cfbca/</link>
      <pubDate>Sun, 21 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/posts/%E4%BB%8E%E6%A0%B8%E5%BF%83%E7%8E%A9%E6%B3%95%E5%BC%80%E5%A7%8B%E8%AE%BE%E8%AE%A1%E6%B8%B8%E6%88%8F-6bea0c261e4241488159df50004cfbca/</guid>
      <description>一个游戏最重要的是什么？规则、故事、艺术、技术、音乐？不同的设计师会有不同的想法。市面上出现了很多种不同类型的成功作品。但在我看来，游戏应当是和电影这种艺术不同的娱乐活动，对于游戏来说，「玩法」是最重要的。
这也是为什么喜欢任天堂的原因，你总能在不同的游戏中找到完全不同的玩法。尽管这可能会带来一些层面上的薄弱，比如较弱的叙事环节。以塞尔达系列为例，「塞尔达的故事是为了引出一系列有趣的机制而存在」。但是仔细想想，当一个游戏中的某一样东西足够好玩时，又有谁会去救公主呢。
核心玩法建立在具体的动作或物品 先确定核心玩法，围绕着这个玩法去扩充别的游戏内容。在经典的马里奥中，核心玩法就是跳跃。但请注意，这几乎也是唯一的玩法。移动靠跳跃、攻击靠跳跃、获取道具也是跳跃。在不同的作品中我们也看到了不同风格的跳跃。一 个动作产生了多样的动作组合。
核心玩法的设计并不是简单的，尽管它最终呈现的结果往往是简单的。扔帽子、打水枪、吸尘器、挖地。你可以联想到一个非常普通的事物，虽然他能干的事情就那么几件，但在游戏中却丰富多彩。当我们把视线转到任天堂之外的游戏，其实也能看见类似的设计。比如Prey里面的胶水枪，你可以用它攻击、逃跑、建造；或者大名鼎鼎的传送门，这个可以说是非任天堂的最任天堂化的作品。
当然了，一个动作也是可以的。我们可以说扔帽子是一个动作，或者说在马里奥银河中，旋转攻击的动作毫无疑问是一个动作。再去看看2020年新发售的Doom，近战这个动作可以说也定位明显。你需要用它来攻击、回复血量、甚至是开门。
核心玩法的体现一定要具体，而不是某个概念，尽管那样也会产生好的游戏。但正如我们从透镜里学到的那样，如果你已经找到了本质体验，那么后面的工作会好做很多。
将元素扩充在核心上 当我们玩刺客信条的时候，你需要记住很多按键。但事实上同时你并不会使用这么多键。你可能会玩相当一段时间才去触发一次鹰眼视觉。与之相比，你会发现任天堂的操作少的可怜。以奥德赛为例，只有跳、屁股蹲、和扔帽子。
但这样的好处在于，当出现一个新机制的时候，如果你不知道怎么办，扔帽子就对了，因为也没有别的什么选项。所以在游戏中的附身发生的很自然，我一开始只是想要攻击那个炮弹，但是出人意料的附身了。当然，这一切的引导机制我们会另起文章来分析。
将元素扩充在核心玩法的好处不仅如此，他会给玩家不断的惊喜，进而引发好奇心。玩家会好奇这样一个简单的动作后面还有什么惊喜的操作，甚至于当他得知了一种新能力，之前走过的路是否还有不同的解法。
另外一个好处是，他会给你一种「开放」感觉。虽然动作库十分的少，但是丰富的交互带来的感觉就是：我可以改变世界中的任何东西。简单的动作，丰富的交互
由核心玩法确定其他 一个设计哲学是：Form Follows Function。一个东西长什么样取决于它的功能是什么。Splatoon里面，玩家需要不断喷射墨水，还要能在喷射的墨水里游泳。乌贼就是一个很好的选择，并且人形态和乌贼的转换可以明显的区分游泳的状态。
除了角色以外，关于场景和音乐的设计也是如此。喷漆的行为联想到90年代的美国小镇，滑板、朋克，自然而然的出现了好的设计。
另外，当你的初期demo是一堆白色的方块，只有玩法时，你就知道这个游戏到底好不好玩。</description>
    </item>
    
    <item>
      <title>iOS 丨 响应链</title>
      <link>http://example.org/posts/%E5%93%8D%E5%BA%94%E9%93%BE/</link>
      <pubDate>Sat, 07 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/posts/%E5%93%8D%E5%BA%94%E9%93%BE/</guid>
      <description>背景 最近接连几个需求都碰到了在响应链上的问题。有的是因为点击事件透传到superview，有的是因为子View将事件过早的拦截。针对一些具体的情况，我们对响应链相关的知识总结一下。
响应链 关于响应链具体是什么，有很多文章都写到了，这里不再赘述。附上Google搜索出来排名很高的两篇文章，基本上把知识点都囊括了。iOS响应链(Responder Chain) - 简书 iOS 中事件的响应链和传递链 | Gsl’s Library。
简单描述一下，基本上是以下的过程：
 点击屏幕产生触摸事件，系统将这个事件加入到一个由UIApplication管理的事件队列中，UIApplication会从队列里取事件分发下去，首先传给UIWindow 在UIWindow中就会调用hitTest:withEvent:方法去返回一个最终响应的视图 在hitTest:withEvent:方法中就会去调用pointInside: withEvent:去判断当前点击的point是否在UIWindow范围内，如果是的话，就会去遍历它的子视图来查找最终响应的子视图 遍历的方式是使用倒序的方式来遍历子视图，也就是说最后添加的子视图会最先遍历，在每一个视图中都回去调用它的hitTest:withEvent:方法，可以理解为是一个递归调用 最终会返回一个响应视图，如果返回视图有值，那么这个视图就作为最终响应视图，结束整个事件传递；如果没有值，那么就会将UIWindow作为响应者  这里有几点要注意的。首先是所有的交互事件是放在一个队列中管理的。为什么是队列？先发生的交互应当先被处理，这符合预期。这其实也能理解为什么有时候会觉得卡顿。当响应这些交互事件的时间要高于我们的反应时间时，就会觉得卡顿。当这个时间要高于我们两次交互的时间时，就会有卡死的感觉。其次，响应链对于view的遍历顺序，应当是一个树的深度遍历方式。这也就解释了为什么是最高层的UIApplication发起的遍历，但是会是最后添加的子view率先响应的问题。同样这也是符合预期的，当我们对页面发起交互事件的时候，点击的对象自然是“离我们最近的”子view。
原理看起来比较简单，我们碰到的主要问题是，响应链什么时候传了下去，什么时候又被拦截掉了。接下来看两个具体的例子。
问题 scrollView无法滑动 我们设置了三层view。底层的父view是一个scrollView，在其上有一个headerView，在headerView上有一个自定义的View作为button。这三个View都是UIView。在headerView中我们可能展示一些图片之类的资源。想要的效果是：在headerView中依然可以滑动，同时headerView中的按钮是可以点击的。
在整个需求做完之后首先碰到的问题是，headerView并不能滑动。这是因为UIView并不处理滑动手势。并且滑动的手势并不会回传给superView。这是因为响应链和手势识别并不是一套系统。
 A window delays the delivery of touch objects to the view so that the gesture recognizer can analyze the touch first. During the delay, if the gesture recognizer recognizes a touch gesture, then the window never delivers the touch object to the view, and also cancels any touch objects it previously sent to the view that were part of that recognized sequence.</description>
    </item>
    
    <item>
      <title>iOS 丨 频控问题</title>
      <link>http://example.org/posts/%E9%A2%91%E6%8E%A7%E9%97%AE%E9%A2%98/</link>
      <pubDate>Sat, 31 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/posts/%E9%A2%91%E6%8E%A7%E9%97%AE%E9%A2%98/</guid>
      <description>背景 客户端有时监听了若干状态。比如不同的VIP状态等，在每次监听改变的时候可能需要重新向后端发请求。这样可能产生的情况是，当某个状态发生改变的时候，多个地方都会监听到，这样可能导致短时间内发出大量相同请求。后端可能进行了频控，这样就会导致拿不到数据展示错误的样式。
debounce &amp;amp; Throttle 前端可能会经常使用的两个方法：防抖和节流。可以在这个场景内去使用。
debounce方法的作用是，在触发方法后的一段时间内，才真正的调用方法。如果在等待的时间内重新有新的触发，那么就会重新计算时间。Throttle方法的作用是，在一段时间内对方法的触发会压缩为一个。
在这个情况下，我们可以使用throttle的方法，在一段时间内的响应，只发送一个请求。
实现 RxSwift 有两种实现的方法。因为项目是用swift开发的，可以直接引入RxSwift库，GitHub - ReactiveX/RxSwift: Reactive Programming in Swift。
private let vipChangePublishSubJect = PublishSubject&amp;lt;Void&amp;gt;() private let disposeBag = DisposeBag() vipChangePublishSubJect .debounce(.milliseconds(200), scheduler: MainScheduler.instance) .subscribe {[weak self] (_) in //action }.disposed(by: disposeBag) 在我们当前的业务场景下，这不见得是非常好的一种做法。使用这种方法意味着要在每一个业务场景去进行单独的设置，这样显然是不好的做法。在我们的业务中，会发生频控的原因在于，业务场景需要监听权益的变化，在权益变化的时候发送请求对用户看到的内容进行刷新。权益本身的变化可能有多个，其中的一个权益内容发生变化可能会重新发送一次请求。最好的做法是，我们在源头，也就是在监听权益内容的地方进行限流。
自己实现 自己实现一个debounce方法。这里有意思的一点在于，虽然说的是debounce方法，但实际上却是Throttle。本质上是将一段时间内的方法触发delay，这段时间内对方法的额外触发将不会重新的触发方法。
要实现这个方法，我们可以使用Dispatchworkitem来实现。本质思路是，因为可能涉及到多个权益切换的监听，每一种切换可能发送出去不同的请求。因此要对不同的切换进行不同的响应。因此还需要使用associate进行关联。
private func vipChangeDebounce() -&amp;gt; DispatchWorkItem { let workItem: DispatchWorkItem? = getAssociated(associatedKey: &amp;amp;Key) if let result = workItem { result.cancel() return result } else { let workItem: DispatchWorkItem = DispatchWorkItem(block: { [weak self] in delay(0.</description>
    </item>
    
    <item>
      <title>iOS 丨 使用AVPlayer播放视频</title>
      <link>http://example.org/posts/%E4%BD%BF%E7%94%A8avplayer%E6%92%AD%E6%94%BE%E8%A7%86%E9%A2%91/</link>
      <pubDate>Tue, 08 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/posts/%E4%BD%BF%E7%94%A8avplayer%E6%92%AD%E6%94%BE%E8%A7%86%E9%A2%91/</guid>
      <description>&lt;h2 id=&#34;背景&#34;&gt;背景&lt;/h2&gt;
&lt;p&gt;播放视频，一个听起来十分合理的需求。iOS提供了AVFoundation，其中的AVPlayer提供了播放视频的能力。在使用的时候我们碰到了一些问题，记录如下。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>iOS 丨 扩大点击区域</title>
      <link>http://example.org/posts/%E6%89%A9%E5%A4%A7%E7%82%B9%E5%87%BB%E5%8C%BA%E5%9F%9F/</link>
      <pubDate>Mon, 07 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/posts/%E6%89%A9%E5%A4%A7%E7%82%B9%E5%87%BB%E5%8C%BA%E5%9F%9F/</guid>
      <description>&lt;h2 id=&#34;背景&#34;&gt;背景&lt;/h2&gt;
&lt;p&gt;有时UE给出的设计稿看起来很美观，对于用户来说并不是那么方便的进行操作。按钮可能小了容易误触，或者不容易触发。开发就需要灵活的去增大某个控件的点击区域，在这里总结一下可以使用的方法。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Reading | 万历十五年</title>
      <link>http://example.org/posts/2019-9-%E4%B8%87%E5%8E%86%E5%8D%81%E4%BA%94%E5%B9%B4-c436840975f84493bbb71a0070989e1f/</link>
      <pubDate>Thu, 03 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2019-9-%E4%B8%87%E5%8E%86%E5%8D%81%E4%BA%94%E5%B9%B4-c436840975f84493bbb71a0070989e1f/</guid>
      <description>8.11日起读黄任宇著《万历十五年》，中华书局版。 9.3日结束
关于礼 “他之所以能贵为天子乃是天意，天意能否长久保持不变在于人和。”
天子的说法很有意思，我国古代少宗教，对于神鬼妖狐的认可基本停留在民间，知识分子精英阶层往往不屑一顾。倒也是一种唯物主义。天，却是实实在在的最高精神信仰。就算是贵为天子，也要受天的制约。这内在便是礼。
我国疆土幅员辽阔，在生产力不发达的情况下，仅靠不发达的国家机器与法律制度，很难维持数亿人民的稳定。之前一直没有考虑过，为什么孔子之后，封建社会才逐渐成为主流的社会形态。私以为，孔孟之道提供了一种可以保持社会稳定的方法，即是礼仪。君君臣臣父父子子，下级听从上级，臣听从君，女人听从男人。这一切要深入人民的骨髓，代代相传，以此为荣。同时在国家层面，结合以韩商的法学中央集权，2000年的封建王朝才得以存续。
因此礼显得十分重要。对于上层，越是繁复严谨，对百姓的震慑就越强。即使是天子，做事也要将求章法，也是要正襟危坐。这既是一种表率，意味着天子如此，草民更应如是；这也是一种安慰，有更上层的力量在约束着领导，他就无法胡作非为。初春之时有一项礼叫春耕，天子会象征的进行农耕，来做万民之表率，同时预祝五谷丰登。这在某种程度上是虚伪，但实际上不是。这是一种象征，象征不一定是虚伪。这种象征可以让千万的百姓相信勤作，相信努力工作就会有好的收成，那么国家自然安稳，百姓安居乐业，岂不是天大的好事。
之前有次和人讨论也是类似于此。要分清象征的作用，也要注意象征的界限，一不小心就会变成虚伪。一定要注意，象征之所以能起到好的效果，一是因为他的内在道理是对的，辛勤劳作的确可以获得更好的收成，努力工作的确可以有进步，在外界环境不变的情况下，这些都是正确的；二是因为人民要相信，若是人们本能的抵触象征，搬开成见远远比劝人向善难得多。
关于象征还要思考，这是一门领导者的学问，对于平凡的自身仍是极有裨益。首先对的起内心，做道理对的事情，学会看到象征背后的本质，如果更好的话，学会利用象征。
关于科举 军训结束了，开始了大三的新学期。继续读书。
读到了第七章，李贽。摘抄一段关于科举的话。
我们的帝国不是一个纯粹的“关闭着的社会”——在那样的社会里，各种职业基本上出于世代相承。——然而它所给予人们选择职业的自由仍然是不多的。一个农民家庭如果企图生活稳定，并且获得社会声望，惟一的道路是读书做官。然而这条道路漫漫修远，很难只由一个人或一代人的努力就能达到目的。通常的方式是一家之内创业的祖先不断地劳作，自奉俭约，积铢累寸，首先巩固自己耕地的所有权，然后获得别人耕地的抵押权，由此而逐步上升为地主。这一过程常常需要几代的时间。经济条件初步具备，子孙就得到了受教育的机会。
这其中，母亲和妻子的自我牺牲，在多数情形之下也为必不可少。所以表面看来，考场内的笔墨，可以使一代清贫立即成为显达，其实幕后的惨淡经营则历时至久。这种经过多年的奋斗而取得的荣誉，接受者只是一个人或至多几个人，但其基础则为全体家庭。
因此，荣誉的获得者必须对家庭负有道义上的全部责任，保持休戚与共的集体观念。
万历十五年的总结与建国前的发展 1587年，是为万历十五年，岁次丁亥，表面上似乎是四海升平，无事可记，实际上我们的大明帝国却已经走到了它发展的尽头。
在这个时候，皇帝的励精图治或者宴安耽乐，首辅的独裁或者调和，高级将领的富于创造或者习于苟安，文官的廉洁奉公或者贪污舞弊，思想家的极端进步或者绝对保守，最后的结果，都是无分善恶，统统不能在事业上取得有意义的发展，有的身败，有的名裂，还有的人则身败而兼名裂。
造成这种现象的原因，在万历朝之前的一千余年中基本如是：社会缺乏有效的经济管理、军事装备、科技发展制度；国家的领导集团无法有效的不断出现的社会问题。
中国传统社会晚期的结构，有如今日美国的“潜水艇夹肉面包”，上面是一块长面包，大而无当，此乃文官集团；下面也是一块长面包，也没有有效的组织，此乃成千上万的农民。其中三个基本的组织原则，此即尊卑男女老幼，没有一个涉及经济及法治和人权，也没有一个可以改造利用。
万历十五年公元为 1587年，去鸦片战争尚有二百五十三年，但是中央集权，技术不能展开，财政无法核实，军备只能以效能最低的因素作标准，则前后相同。
民国肇造后，军阀割据，也是当然趋势。新的力量还没有产生，过渡期间，只能由私人军事势力撑持。这私人军事势力，限于交通通信等条件的束缚，也只能在一两个省区里有效。省区外的竞争，更酿成混战局面。
国民党专政期间，创造了一个高层机构，总算结束了军阀混战，但是全靠城市经济维持。
共产党的土地革命，在农村中创造了一个新的低层机构。现在中国当前的任务，则是在高层机构和低层机构间敷设有制度性的联系，才能从上至下，能够以经济及法治的方法管理，脱离官僚政治的垄断。
关于人类发展的一种描述 下面图中实线部分代表我们可以以经验证实的知识，即我自己所称大历史，虽包括中国商周到人民共和国已三千多年，在人类历史上讲，仍不过长弧线上的一个小段落。我们所认为的真理，也是在这小范围切身直觉而成。我们也还不能够知道宇宙结构的真原因和真目的，也很难预知今后的真结局与真趋势。用虚线表示这弧线的过去和未来，也仅仅是凭实线作根据，揣测而成。社会科学和自然科学一样，都只能假定自然法规（ natural law）会要逐渐展开。下一代的人证实我们的发现，也可能检讨我们的错误，也就等于我们看到前一代的错误一样。
图上向外的箭头表示我们的道德观念，都有突出环境、创造新环境的征象。可是我们又无法脱离站住脚跟的基点。况且我们自己也有继续做错事的根性。这根性以向内的箭头表示之。所以我们所走的路线也只能在内外之间，亦即希望与现实之中的弧形路线，半出于我们的志愿，半由于其他条件推演而成。只是因为今日科技发展之故，旅行于弧线形的速率越来越快。我们只好把向外的箭头画长。
名士、首辅与皇帝 戚继光 戚继光是一个天才的将军，在这无关紧要的万历十五年年底去世。他使数量巨大但实际不堪一击的军队恢复了元气，独力编撰了军事操典，创制了新的战斗队形和战斗技术，享有因抗击沿海倭寇和北方蒙古人而令人欢欣鼓舞的成功。
然而，随着他的保护人首辅张居正的去世及其身后的失宠，这位伟大的勇士被降职了，最终受到责难并被解职，在贫困交加中凄凉辞世。军官们几乎是一个完全世袭的阶层，被认为仅具打斗之长。他们得不到文官们的信任，而后者则专注于克己与中庸之道。任何肇基于帝国官僚政治之外的权力必须得到控制，而“随着戚继光的去世，我们的帝国失去了将它的军队施予最低程度的现代化以图在新时代里生存的最后一次机会”。
海瑞 1587年去世的还有著名的海瑞。他是一个极度严正的文职官员，敢于在一封公开的奏疏中批评嘉靖皇帝“虚荣、残忍、自私、多疑和愚蠢”。在任职南直隶巡抚期间，针对以伪善贪赃而出名的特权阶层，他厉行节约，作风严峻，甚至提出禁止在政府公文的末尾留有空白，以防浪费。
然而，他的改革热情很快使他在土地问题上同保守派发生冲突，被迫开始长达十五年的赋闲生涯，其后虽再度起用，但被委以没有实权的闲曹职务，直至死去，历时甚短。“接近 1587年年底亦即万历十五年丁亥的岁暮，海瑞的死讯传出，无疑使北京的朝廷大大地松了口气。现在，没有人必须为罢免一个大众心目中的英雄而承担责任了。在同僚和皇帝的眼中，海瑞无聊可笑，又不合时宜。”
李贽 第三位叛逆者是想冲破当时社会制度却无法找到出路的哲学家李贽。他对神圣的儒家经典发表了大量的惊世骇俗之论，因其中包含有平等思想的迹象而受到当今中国统治者的喜爱。
不过，实际上李贽并没有完全摆脱精英分子和儒家的信条，正是这些信条养育了他。对黄先生来说，李贽的著作起码构成了“了“一份珍贵的记录，使我们得以了解这个时代所特有的知识界的挫败。没有这些著作，我们将可能无从探测这挫败的深度”。
首辅 张居正和申时行这两位首辅的职业生涯提供了另一种挫败的实例。我们的帝国因其中央集权和过度膨胀而运转不灵，但他们企图管理帝国的一切事务。他们的这一企图受制于圣贤教育的成规，因之他们最基本的任务是“使皇帝的官员们尽量按古代圣贤的教导行事”：管理我们这个庞大帝国的秘诀是不能依靠法律或权力去管制和惩罚，而是劝导人们，青年人要尊敬老年人，女人要服从男人，文盲要追随读书识字的人。在这些方面，官员们的表率作用就极其重要。
皇帝 最为引人注意的人物是神宗皇帝本人，为方便起见，书中以他在位的年号“万历”来称呼他。他即位时不足九岁，到 1587年也才是一位二十四岁的年轻人，但他注定是明朝历史上在位时间最长的一位皇帝。
万历是一个早熟而听话的孩子，不仅要学习书法、历史和经学，还欣然履行皇帝所需承担的各种礼仪职责。除了藉田、祭祀天地祖宗和颁历这样的周期性仪式外，每天的早朝也要求皇帝出席。这种日复一日的早朝仪式极端刻板，必须在拂晓之前举行，此前就已成为皇帝难以忍受的负担。包括万历冷漠的父亲亦即隆庆皇帝在内，万历之前有好几位皇帝都荒于早朝。等到万历成年，他也发现即使早朝时间缩短，还是令人难以忍受。正值幼年就已披上龙袍，他既没有玩伴，也没有娱乐。在十岁那年，他迷上了书法，但却被制止了。他的老师、首辅张居正提醒他说，皇帝陛下的书法已经超过了所预想的程度。“张居正进一步说，书法毕竟是一种微不足道的艺术，它本身无益于帝国的福祉。中国历史上的圣明君主惟以德行高尚而著称于世，而不是以其艺术才能传世。”稍后，万历的兴趣发展为迷恋骑马、醇酒和美人。尽管皇帝变得越来越难以自律，听不进逆耳忠言，但官僚们对此依然一片反对之声。
万历十四岁结婚，十八岁时王恭妃给他生了第一个孩子。这时，他爱上了另一妃子，只有十四岁却很聪明的郑氏。皇帝希望郑氏的儿子而不是长子来继承皇位，为此跟他的臣僚们疏远了数十年。他拒绝上朝会见大臣，拒绝任命官员，而大明帝国因之越来越滑向混乱无序的深渊。
在万历统治的早期，他表现出了求治心切的迹象。 1585年发生了严重的旱灾，万历“命令地方官员求雨，但没有任何效果”，于是他决定亲自到宫门外四英里之远的天坛举行祈雨仪式，而且这一路不坐乘舆，徒步前往。“对北京的许多居民来说，这是他们一生中亲眼目睹天子的惟一一次机会。”虽然是一个月之后，但雨还是来了。也是在其统治早期，万历还亲自主持御林军的操练和比赛，四次带着欢乐而庞大的随从队伍去拜谒北京郊区的皇陵——那里正在修筑他自己的陵墓。官僚阶层对皇帝陛下的所有这些冒险活动感到惊慌。围绕着皇帝的每一个行动，他们都加以预防性的批评，从而“成功地剥夺了皇帝出行的快乐”。
1588年，万历又一次拜谒了自己的陵墓，此后在皇宫大院里一呆就是三十多年，创下了皇帝怠政的空前记录。在这个王朝的几个世纪里，“君主已经是一个高度程式化的位置，以致没有一个有思想的人能够安坐龙椅”。作为吸引天命的幌子，关键是最高统治者保持静默的威严。在日出后就立即举行的经筵上，时间一久，如果皇帝漫不经心地翘起了二郎腿，讲官就不得不停下来问他：“君主自己难道可以忽视礼仪吗？”除非天子放下二郎腿，端坐如仪，否则讲官就会一直这样问下去。所以没有什么可奇怪，皇帝们会以纵情声色和冷漠无情来反抗；也没有什么可奇怪，在其皇帝角色里表现活力的所有尝试遭到普遍反对后，万历走上了罢工的道路，全身心地去陪伴郑贵妃——还有传闻说，他躲在宫里抽大烟。</description>
    </item>
    
    <item>
      <title>Reading | 推理小说们</title>
      <link>http://example.org/posts/2020-2-%E6%8E%A8%E7%90%86%E5%B0%8F%E8%AF%B4%E4%BB%AC-914a3f7e807c40e0b28703cd26b368b9/</link>
      <pubDate>Sat, 25 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2020-2-%E6%8E%A8%E7%90%86%E5%B0%8F%E8%AF%B4%E4%BB%AC-914a3f7e807c40e0b28703cd26b368b9/</guid>
      <description>疫情的影响只能呆在家里，读了很多推理小说，就不分开写了，总体上回顾一下。首先把书单列出来：
 《X的悲剧》- 埃勒里·奎恩 《希腊棺材之谜》- 埃勒里·奎恩 《占星术杀人事件》- 岛田庄司 《钟表馆事件》 - 绫辻行人 《杀戮之病》- 我孙子武丸  几本书中最喜欢的当属《钟表馆事件》，接下来一一说一下几本书的感觉。
X的悲剧 因为侦探是一名退休话剧演员的原因，整本书的结构和话剧也是一样的，分幕式的进行，看起来别有一般感觉。 诡计不错，行文中不少地方实际给出了很多线索。比如售票员独居带来的身份问题，以及在最初的杀人案中关于手套的推理。只不过唯一的问题在于动机，当动机在最后被揭晓时才能明白这一切的关联。我也是在一开始排除了公车上除死者一行人之外的所有人，原因也是一次偶然的上车没理由会进行谋杀。 推理应当围绕眼前看到的证据，而不是通过动机进行揣测。 要说唯一的一点不满的地方就是，最后的剪刀手有些刻意。不过也算是戏剧的一点吧。总体来说是不错的小说。
希腊棺材之谜 不知道是因为翻译问题还是什么，这本书十分难读。包括叙述的方式等。因此在感觉上这本书大打折扣。虽说之前也读过相当的国外小说，但是希腊棺材的难度水平倒是第一次见。
占星术杀人事件 大师之作。非常宏大的谜面，横跨30年的解谜。御手洁和冈田颇有福尔摩斯和华生的感觉。是一本非常古典的本格推理。连续几页的对话和推理说不定也会劝退hhh
钟表馆事件 最喜欢的一部。在馆系列中也是拔得头筹的一部。而且对于我来说，相比起本格的推理快感更喜欢叙诡的惊险刺激。整本书看的时候都是“他一定是凶手”，“哦不对他一定是凶手”的思想。到最后才发现真凶原来是ta，这种反转十分惊艳。包括诡计的设计，至少在我看来别出心裁，并且细思极恐。 两天就看完了这本书，十分畅快。
杀戮之病 真的是好重口味……怪不得亚马逊上不卖这本书。不过整本书的叙诡也是极其有趣的。最后的几个自然段会颠覆之前的所有预设。 不过其他就显得平庸，唯一的诡计就是叙诡。而侦探在小说中显得非常乏力，可以说是基本没有。当作悬疑小说读也还不错。</description>
    </item>
    
    <item>
      <title>Reading | 呼吸</title>
      <link>http://example.org/posts/2020-1-%E5%91%BC%E5%90%B8-c0203aabd3df447c8d6bdb1a87cdb825/</link>
      <pubDate>Sat, 25 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2020-1-%E5%91%BC%E5%90%B8-c0203aabd3df447c8d6bdb1a87cdb825/</guid>
      <description>1.8日起读特德·姜著《呼吸》 1.17结束
特德·姜所著的九个中短篇科幻小说。整本书是在日本的旅途中所看的，短篇小说也很适合在飞机上零碎的阅读。
商人与炼金术之门 关于时间穿越，经典的科幻套路，过去是现在的未来，所有的改变实际上已经对现在进行了影响。尚可之作。
呼吸 最喜欢的一个篇章。整体的构思非常之有趣，读到一半的时候会发出惊讶的啊，再读到最后的时候会豁然开朗，甘拜下风。
我希望你不要因为知道了这样的结局就感到悲哀，希望你们的探险不仅仅是为了搜索充当储气槽的其他宇宙，希望你们是在求知欲的激发下，渴望见识宇宙呼出一口气能产生什么结果。因为即使一座宇宙的寿命可以预测，宇宙中生命的多样性也是无法统计的。我们的建筑，我们的美术、音乐和诗词，我们各自的生命：没有一个可以预测，因为这些都不是必然的。我们的宇宙在滑向平衡点的过程中也许只能静静地呼气，但它繁衍出的我们这个丰富多彩的世界却是个奇迹，只有诞生了你们的宇宙才能与之媲美。探险者，尽管你读到这里的时候我去世已久，但我还是要送你一句临别赠言。仔细想想，得以存在便是一个奇迹，能够思考就是一件乐事。我觉得我有权告诉你这一点，因为在刻下这些文字的时候，我就是这样想的。
罗杰·彭罗斯所著的《皇帝的新脑》中讨论熵的那一章。他指出，我们通常认为进食是因为需要食物中的能量，但这种说法是错误的。能量守恒定律说能量既不会创生，也不会消失。我们在持续辐射能量，其速率跟我们吸收能量的速率大体相当。区别在于我们辐射的热能是高熵能量，也就是无序的能量，而我们吸收的化学能是低熵能量，即有序的能量。也就是说，我们在消耗秩序，造成无序，我们靠增加宇宙的无序度为生。正因为宇宙诞生在一个高度有序的状态，我们才能够存在。这个观点挺简单，但读到彭罗斯的解释之前，我从没见过它以那样的方式被表达出来。
前路迢迢 非常短。关于自由意志的探讨。倒是结尾有一个东西蛮有趣，称之为“有害感官”，比如一个可以让人笑死的笑话。一旦你理解了某样东西，你就会因之而死。自由意志是否又是其中之一呢？
软件的生命体周期 算是其中比较长的部分了，探讨的部分也相对完整。人类对电子生命的抚养，以及衍生出的教育问题等。 让我引用下莫莉·格罗斯的话，她曾经在一次演讲中分享过成为母亲对她作家生涯的影响。“养个孩子，”她说，“让你不得不认真思考一些让人头疼的问题：什么是爱？我们如何获得爱？为什么这个世界上存在罪恶、痛苦和失去？我们如何找到尊严与宽容？谁拥有权力？为什么？什么是解决矛盾的最佳途径？”如果我们想赋予一个人工智能大的责任，那么，我们需要为这些问题提供合理解答。要做到这一点，需要的不是把康德的所有书都植入人工智能的大脑，而是类似于父母对子女那种精心照料。
达西的自动机器保姆 行为心理学家B.S.斯金纳为他的女儿设计过一个特殊的摇篮，一直有传言说，他女儿在成长过程中心理受到创伤，最终自杀。这完全是谎言，她在成长过程中一直幸福健康。另一方面，想想心理学家约翰·B.沃森是行为学派的奠基人，他曾建议家长：“你们打算宠爱孩子时，要记住，母爱是一种危险的手段。”整个二十世纪上半叶，他塑造了一些抚养小孩的观念，相信自己的方法对孩子最有利，可结果是，他自己所有的孩子成年后都受到抑郁的困扰，不止一人尝试自杀，最后一人丧命。
双面真相 一次双线叙述，一条是欧洲的传教士向土著们教授文字；另一条是在未来，记忆可以被用硬盘的形式存储。 之前在黑镜看过类似的题材，不过倒是提醒了一点。当我们看到下一次技术变革的时候，应当回忆起上一次是如何对待的。
大寂静 有趣的作品。讲述了一种生活在地球上的智慧鹦鹉的灭绝。拥有智慧但是人类并不理解。 在宇宙中人类或许也是如此。
脐 读到的时候正在前往札幌的飞机上。关于科学与宗教的讨论。故事本身对我影响并不大，因为缺乏对宗教的感知。 倒是下飞机后，在新干线上看到了茫茫的雪原和异国他乡五彩斑斓的建筑，倒有些感触。想来应是越往北就越接近主的所在，或许第一批前往北极的人也有这样的私心？这种看起来可以延伸到星球最远端的雪，在雪中如蚍蜉一般的人，确实也会认为有更高级的存在在俯视、创造和倾听。
焦虑是自由引起的眩晕 量子力学和平行宇宙的讨论，故事本身是相当有意思的。平行宇宙所带来的道德评价争论。 在有关自由意志的讨论中，很多人说，所谓你可以自由选择的行为——由你承担道德责任的那个行为——意味着在完全相同的条件下，你必须拥有作出不同选择的能力。哲学家不停地争论这究竟是什么意思。有些人指出，马丁·路德一五二一年对教会辩护他自己的行为时，他说：“我站在这里，无法去做别的。”也就是说，他不可能做出别的行为，可那是否意味着我们不应该赞赏他的行为。如果他说“我可以有别的做法”，我们当然不会认为他值得更多赞誉。 有关量子力学的多世界诠释，在大众的理解中，它的含义是：我们的宇宙不断地分裂成近乎无穷多个不同的版本。对此观点，我大体上抱有不可知的态度；但我觉得，它的支持者如果对它的含义做出更适度的主张，遇到的阻力便会小一些。比如，有人辩称，多世界诠释致使我们的选择变得毫无意义，因为不论你怎么做，总有另外一个你采取相反做法的宇宙存在，来抵消你所作决定的道德权重。我相当确信的是，即使多世界诠释是正确的，它也不意味着我们所有的决定都会被抵消。如果一个人的性格特征由他长久以来所作的决定所体现，那么，同样也会从他在多个世界中所作的决定中昭示出来。假如你可以用某种方法调查马丁·路德在多个世界中的态度，要发现一个他没有反抗教会的世界，我觉得你得查找很多，而这，就证明了他是个什么样的人。</description>
    </item>
    
  </channel>
</rss>
